/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderLinks".
 */
export type HeaderLinks =
  | {
      type: 'link' | 'dropdown' | 'dropdownWithLink';
      link?: LinkField;
      label?: string | null;
      links?:
        | {
            link?: LinkField;
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[]
  | null;

export interface Config {
  collections: {
    page: Page;
    template: Template;
    unit: Unit;
    'unit-tag': UnitTag;
    'unit-type': UnitType;
    'unit-category': UnitCategory;
    'unit-era': UnitEra;
    weapon: Weapon;
    media: Media;
    user: User;
    profile: Profile;
    'profile-unit': ProfileUnit;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    layout: Layout;
    settings: Setting;
  };
  locale: 'ar' | 'cz' | 'de' | 'en' | 'pl' | 'ru' | 'tr';
  user: User & {
    collection: 'user';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page".
 */
export interface Page {
  id: string;
  title?: string | null;
  fullTitle?: string | null;
  slug?: string | null;
  pathname?: string | null;
  parent?: (string | null) | Page;
  template?: (string | null) | Template;
  blocks?: Module[] | null;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "template".
 */
export interface Template {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Module".
 */
export interface Module {
  module?: (LoginModule | ProfileModule | CreateProfileModule)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'module';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LoginModule".
 */
export interface LoginModule {
  subtitle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  loginWithDiscord?: string | null;
  privacyPolicy?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  security?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'login';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProfileModule".
 */
export interface ProfileModule {
  id?: string | null;
  blockName?: string | null;
  blockType: 'profile';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CreateProfileModule".
 */
export interface CreateProfileModule {
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  createAProfile?: string | null;
  subtitle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  usernameDescription?: string | null;
  slugDescription?: string | null;
  submitLabel?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'create-profile';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "unit".
 */
export interface Unit {
  id: string;
  name: string;
  tags?: (string | UnitTag)[] | null;
  leadership: number;
  stars: number;
  maxLevel: number;
  type: string | UnitType;
  category: string | UnitCategory;
  era: string | UnitEra;
  mastery: {
    hasMastery?: boolean | null;
    nodes?:
      | {
          title?: string | null;
          description?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          id?: string | null;
        }[]
      | null;
  };
  attributes: {
    health?: number | null;
    strength?: number | null;
    speed?: number | null;
    range?: number | null;
    ammo?: number | null;
    labour?: number | null;
    piercingArmourPenetration?: number | null;
    slashingArmourPenetration?: number | null;
    bluntArmourPenetration?: number | null;
    piercingDamage?: number | null;
    slashingDamage?: number | null;
    bluntDamage?: number | null;
    piercingDefence?: number | null;
    slashingDefence?: number | null;
    bluntDefence?: number | null;
  };
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "unit-tag".
 */
export interface UnitTag {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "unit-type".
 */
export interface UnitType {
  id: string;
  name?: string | null;
  weight?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "unit-category".
 */
export interface UnitCategory {
  id: string;
  name?: string | null;
  weight?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "unit-era".
 */
export interface UnitEra {
  id: string;
  name?: string | null;
  weight?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "weapon".
 */
export interface Weapon {
  id: string;
  name?: string | null;
  type?: ('light' | 'medium' | 'heavy') | null;
  weight?: number | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  blurDataURL?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    blur?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user".
 */
export interface User {
  id: string;
  roles?: ('banned' | 'user' | 'member' | 'maintainer' | 'admin')[] | null;
  profile?: (string | null) | Profile;
  discordId?: string | null;
  discordUsername?: string | null;
  discordDiscriminator?: string | null;
  discordAccessToken?: string | null;
  discordRefreshToken?: string | null;
  discordAvatar?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "profile".
 */
export interface Profile {
  id: string;
  username?: string | null;
  level?: number | null;
  lightLeadership?: number | null;
  mediumLeadership?: number | null;
  heavyLeadership?: number | null;
  weapons?:
    | {
        leadership?: number | null;
        id?: string | null;
      }[]
    | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "profile-unit".
 */
export interface ProfileUnit {
  id: string;
  profile: string | Profile;
  unit: string | Unit;
  level: number;
  status: 'training' | 'ready' | 'maxed';
  unlockedMasteryNodes?: number | null;
  favorite?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'user';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "layout".
 */
export interface Layout {
  id: string;
  header: {
    links?: HeaderLinks;
    login?: LinkField;
    actions?: {
      switchLanguage?: string | null;
      toggleColorScheme?: string | null;
    };
    userMenu?: {
      notifications?: string | null;
      profile?: LinkField;
      createProfile?: LinkField;
      dashboard?: LinkField;
      joinRaid?: LinkField;
      createRaid?: LinkField;
      groupBuilder?: LinkField;
      adminDashboard?: LinkField;
      logout?: LinkField;
    };
  };
  footer: {
    developedBy?: string | null;
    joinOurDiscord?: string | null;
    joinDiscordLink?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkField".
 */
export interface LinkField {
  type?: ('reference' | 'custom') | null;
  newTab?: boolean | null;
  reference?: (string | null) | Page;
  url?: string | null;
  label?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: string;
  pages: {
    units?: {
      defaultParentPage?: (string | null) | Page;
      template?: (string | null) | Template;
    };
    unit?: {
      defaultParentPage?: (string | null) | Page;
      template?: (string | null) | Template;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}